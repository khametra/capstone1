{"version":3,"sources":["webpack:///./src/polyfills.ts?5d2d","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/services/author.service.ts","webpack:///./src/app/addquiz/addquiz.component.ts","webpack:///./src/app/adminquiz/viewquiz.component.ts","webpack:///./src/app/author/author.component.ts","webpack:///./src/app/authorlogin/authorlogin.ts","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/nav/navbar.ts","webpack:///./src/app/quiz/quiz.component.ts","webpack:///./src/app/register/register.component.ts","webpack:///./src/models/index.ts","webpack:///./src/models/option.ts","webpack:///./src/models/question.ts","webpack:///./src/$_gendir async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/guards/notAuth.guard.ts","webpack:///./src/app/services/helper.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/models/quiz-config.ts","webpack:///./src/models/quiz.ts","webpack:///./src/app/addquiz/addquiz.component.css","webpack:///./src/app/adminquiz/viewquiz.component.css","webpack:///./src/app/app.component.css","webpack:///./src/app/author/author.component.css","webpack:///./src/app/home/home.component.css","webpack:///./src/app/login/login.component.css","webpack:///./src/app/quiz/quiz.component.css","webpack:///./src/app/register/register.component.css","webpack:///./src/app/addquiz/addquiz.component.html","webpack:///./src/app/adminquiz/viewquiz.component.html","webpack:///./src/app/app.component.html","webpack:///./src/app/author/author.component.html","webpack:///./src/app/authorlogin/authorlogin.html","webpack:///./src/app/home/home.component.html","webpack:///./src/app/login/login.component.html","webpack:///./src/app/nav/navbar.html","webpack:///./src/app/quiz/quiz.component.html","webpack:///./src/app/register/register.component.html","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/quiz.service.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["// This file includes polyfills needed by Angular 2 and is loaded before\n// the app. You can add your own extra polyfills to this file.\nimport 'core-js/es6/symbol';\nimport 'core-js/es6/object';\nimport 'core-js/es6/function';\nimport 'core-js/es6/parse-int';\nimport 'core-js/es6/parse-float';\nimport 'core-js/es6/number';\nimport 'core-js/es6/math';\nimport 'core-js/es6/string';\nimport 'core-js/es6/date';\nimport 'core-js/es6/array';\nimport 'core-js/es6/regexp';\nimport 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport 'core-js/es6/reflect';\n\nimport 'core-js/es7/reflect';\nimport 'zone.js/dist/zone';\n\n\n\n// WEBPACK FOOTER //\n// ./src/polyfills.ts","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  redirectUrl;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  // Function to check if user is authorized to view route\n  canActivate(\n    router: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ) {\n    // Check if user is logge din\n    if (this.authService.loggedIn()) {\n      return true; // Return true: User is allowed to view route\n    } else {\n      this.redirectUrl = state.url; // Grab previous urul\n      this.router.navigate(['/login']); // Return error and route to login page\n      return false; // Return false: user not authorized to view page\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/guards/auth.guard.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { tokenNotExpired } from 'angular2-jwt';\r\n\r\n@Injectable()\r\nexport class AuthorService {\r\n\r\n  domain = \"http://localhost:8080\"; // Development Domain - Not Needed in Production\r\n  authToken;\r\n  user;\r\n  options;\r\n\r\n  constructor(\r\n    private http: Http\r\n  ) { }\r\n\r\n  // Function to create headers, add token, to be used in HTTP requests\r\n  createAuthenticationHeaders() {\r\n    this.loadToken(); // Get token so it can be attached to headers\r\n    // Headers configuration options\r\n    this.options = new RequestOptions({\r\n      headers: new Headers({\r\n        'Content-Type': 'application/json', // Format set to JSON\r\n        'authorization': this.authToken // Attach token\r\n      })\r\n    });\r\n  }\r\n\r\n  // Function to get token from client local storage\r\n  loadToken() {\r\n    this.authToken = localStorage.getItem('token');; // Get token and asssign to variable to be used elsewhere\r\n  }\r\n\r\n  // Function to register user accounts\r\n  registerUser(user) {\r\n    return this.http.post(this.domain + '/authorauthentication/register', user).map(res => res.json());\r\n  }\r\n\r\n  // Function to check if username is taken\r\n  checkUsername(username) {\r\n    return this.http.get(this.domain + '/authorauthentication/checkUsername/' + username).map(res => res.json());\r\n  }\r\n\r\n  // Function to check if e-mail is taken\r\n  checkEmail(email) {\r\n    return this.http.get(this.domain + '/authorauthentication/checkEmail/' + email).map(res => res.json());\r\n  }\r\n\r\n  // Function to login user\r\n  login(user) {\r\n    return this.http.post(this.domain + '/authorauthentication/login', user).map(res => res.json());\r\n  }\r\n\r\n  // Function to logout\r\n  logout() {\r\n    this.authToken = null; // Set token to null\r\n    this.user = null; // Set user to null\r\n    localStorage.clear(); // Clear local storage\r\n  }\r\n\r\n  // Function to store user's data in client local storage\r\n  storeUserData(token, user) {\r\n    localStorage.setItem('token', token); // Set token in local storage\r\n    localStorage.setItem('user', JSON.stringify(user)); // Set user in local storage as string\r\n    this.authToken = token; // Assign token to be used elsewhere\r\n    this.user = user; // Set user to be used elsewhere\r\n  }\r\n\r\n  // Function to get user's profile data\r\n  getProfile() {\r\n    this.createAuthenticationHeaders(); // Create headers before sending to API\r\n    return this.http.get(this.domain + '/authorauthentication/profile', this.options).map(res => res.json());\r\n  }\r\n\r\n  // Function to check if user is logged in\r\n  loggedIn() {\r\n    return tokenNotExpired();\r\n  }\r\n\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/author.service.ts","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { Location } from \"@angular/common\";\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { QuizService } from '../services/quiz.service';\nimport { HelperService } from '../services/helper.service';\nimport { Option, Question, Quiz, QuizConfig } from '../../models/index';\n\n\n@Component({\n  selector: 'app-addquiz',\n  templateUrl: './addquiz.component.html',\n  styleUrls: ['./addquiz.component.css']\n\n})\nexport class AddquizComponent implements OnInit {\n\nconstructor(private quizservice: QuizService, private router: Router, private location: Location ) { }\n\nquestion: any[]=[];\noptions:any[]=[];\n\ncounter:number=0;\ncounter1:number=10;\n\ncorrectanswer1:boolean=false;\ncorrectanswer2:boolean=false;\ncorrectanswer3:boolean=false;\ncorrectanswer4:boolean=false;\n\n  ngOnInit() {\n  }\n\naddQuestion(formvalue: any){\nthis.options=[];\n console.log(\"Form Value = \" + JSON.stringify(formvalue.answer));\n\nswitch(+formvalue.answer){\ncase 1:{\n  this.correctanswer1=true;\n  break;\n}\ncase 2:{\n  this.correctanswer2=true;\n  break;\n}\ncase 3:{\n  this.correctanswer3=true;\n  break;\n}\ncase 4:{\n  this.correctanswer4=true;\n  break;\n}\n\n}\n\nlet op1={\nid:this.counter1+1,\nquestionId:this.counter+1,\nname:formvalue.op1,\nisAnswer:this.correctanswer1,\n}\n\nthis.counter1+=1;\n\nlet op2={\nid:this.counter1+1,\nquestionId:this.counter+1,\nname:formvalue.op2,\nisAnswer:this.correctanswer2,\n}\n\nthis.counter1+=1;\n\nlet op3={\nid:this.counter1+1,\nquestionId:this.counter+1,\nname:formvalue.op3,\nisAnswer:this.correctanswer3,\n}\n\nthis.counter1+=1;\n\nlet op4={\nid:this.counter1+1,\nquestionId:this.counter+1,\nname:formvalue.op4,\nisAnswer:this.correctanswer4,\n}\n\n\n\nthis.options.push(op1);\nthis.options.push(op2);\nthis.options.push(op3);\nthis.options.push(op4);\n\nlet qs={\n  id:this.counter+1,\n  name:formvalue.qname,\n  questionTypeId:1,\n  options:this.options,\n  questiontype:{\n    id:1,\n    name:\"Multiple Choice\",\n     isActive: false\n  }\n}\n\nthis.counter+=1;\nthis.question.push(qs);\nconsole.log(qs);\n\nthis.correctanswer1=false;\nthis.correctanswer2=false;\nthis.correctanswer3=false;\nthis.correctanswer4=false;\n\n}\n\n//  submit quiz form\n\n\n  onSubmit(formvalue: any) {\n    console.log(\"after submitting form \");\n      let quiz= {\n          id:5,\n          name:formvalue.quizname,\n          author:formvalue.authorname,\n          questions:this.question,\n     }\n     console.log(\" values of form \");\n     console.log(quiz);\n\n      this.quizservice.addquiz(quiz)\n      .subscribe(()=>{\n         console.log(\"quiz added to data base\");\n          this.router.navigate(['admin']);\n         },\n          err=>{\n       console.log(err);\n     });\n\n\n  }\n  goBack(): void {\n       this.location.back();\n   }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/addquiz/addquiz.component.ts","import { Component, OnInit } from '@angular/core';\nimport { Location } from \"@angular/common\";\n//import { AuthService } from '../services/auth.service';\nimport { QuizService } from '../services/quiz.service';\nimport { Router } from '@angular/router';\nimport { HelperService } from '../services/helper.service';\nimport { Option, Question, Quiz, QuizConfig } from '../../models/index';\nimport { ActivatedRoute, Params } from \"@angular/router\";\nimport { Observable } from 'rxjs/Rx';\n\n\n@Component({\n  selector: 'app-quiz',\n  templateUrl: './viewquiz.component.html',\n  styleUrls: ['./viewquiz.component.css'],\n  providers: [QuizService]\n})\n\nexport class ViewQuizComponent implements OnInit {\n  username = '';\n  email = '';\n  quizes: any[];\n  quiz: Quiz = new Quiz(null);\n  mode = '';\n  quizName: string;\n \n\n  config: QuizConfig = {\n    'allowBack': true,\n    'allowReview': true,\n    'autoMove': false,  // if true, it will move to next question automatically when answered.\n    'duration': 0,  // indicates the time in which quiz needs to be completed. 0 means unlimited.\n    'pageSize': 1,\n    'requiredAll': false,  // indicates if you must answer all the questions before submitting.\n    'richText': false,\n    'shuffleQuestions': false,\n    'shuffleOptions': false,\n    'showClock': false,\n    'showPager': true,\n    'theme': 'none'\n  };\n\n  pager = {\n    index: 0,\n    size: 1,\n    count: 1\n  };\n\n id:any=0;\n\n  constructor(private quizService: QuizService,  private location: Location,   /*public authService: AuthService,*/ private route: ActivatedRoute) { }\n\n    ngOnInit() {\n\n         this.route.params.forEach((params: Params) => {\n            this.id = +params['id'];\n        });\n\n       this.quizService.get(this.id).subscribe(res => {\n       console.log(\"responce from server \");\n       console.log(res);\n    \n      this.quiz = new Quiz(res);\n      this.pager.count = this.quiz.questions.length;\n    });\n    this.mode = 'quiz';\n\n   // this.quizName = this.quizes[0].id;\n     //console.log(this.quizes);\n    //this.loadQuiz(this.quizName);\n\n    //this.authService.getProfile().subscribe(profile => {\n     //this.username = profile.user.username; // Set username\n     //this.email = profile.user.email; // Set e-mail\n//});\n   }\n\n  //  onLogoutClick() {\n  //    this.authService.logout(); // Logout user\n  //    //this.flashMessagesService.show('You are logged out', { cssClass: 'alert-info' }); // Set custom flash message\n  //    this.router.navigate(['/']); // Navigate back to home page\n  //  }\n\n//   loadQuiz(quizName: string) {\n//     console.log(quizName);\n\n//     this.quizService.get(quizName).subscribe(res => {\n//       //console.log(\"responce from server \");\n//       //console.log(res);\n    \n//       this.quiz = new Quiz(res);\n//       this.pager.count = this.quiz.questions.length;\n//     });\n//     this.mode = 'quiz';\n//   }\n\n  get filteredQuestions() {\n    return (this.quiz.questions) ?\n      this.quiz.questions.slice(this.pager.index, this.pager.index + this.pager.size) : [];\n  }\n\n  onSelect(question: Question, option: Option) {\n    if (question.questionTypeId === 1) {\n      question.options.forEach((x) => { if (x.id !== option.id) x.selected = false; });\n    }\n\n    if (this.config.autoMove) {\n      this.goTo(this.pager.index + 1);\n    }\n  }\n\n  goTo(index: number) {\n    if (index >= 0 && index < this.pager.count) {\n      this.pager.index = index;\n      this.mode = 'quiz';\n    }\n  }\n\n  isAnswered(question: Question) {\n    return question.options.find(x => x.selected) ? 'Answered' : 'Not Answered';\n  };\n\n  isCorrect(question: Question) {\n    return question.options.every(x => x.selected === x.isAnswer) ? 'correct' : 'wrong';\n  };\n\n//   onSubmit() {\n//     let answers = [];\n//     this.quiz.questions.forEach(x => answers.push({ 'quizId': this.quiz.id, 'questionId': x.id, 'answered': x.answered }));\n\n//     // Post your data to the server here. answers contains the questionId and the users' answer.\n//     console.log(this.quiz.questions);\n//     this.mode = 'result';\n//   }\n\n   goBack(): void {\n        this.location.back();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/adminquiz/viewquiz.component.ts","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { NgModule } from '@angular/core'\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { QuizService } from '../services/quiz.service';\nimport { AuthService } from '../services/auth.service';\nimport { HelperService } from '../services/helper.service';\nimport { Option, Question, Quiz, QuizConfig } from '../../models/index';\n\n\n@Component({\n  selector: 'app-addquiz',\n  templateUrl: './author.component.html',\n  styleUrls: ['./author.component.css']\n\n})\n\nexport class AdminComponent implements OnInit {\n   quizes: any[];\n   username = '';\n   email = '';\n      constructor(private quizservice : QuizService, public authService: AuthService, private router: Router){ }\n\n        ngOnInit() {\n          this.quizservice.getquiz()\n               .subscribe(quizes=>{\n                   this.quizes=quizes;\n        });\n        this.authService.getProfile().subscribe(profile => {\n         this.username = profile.user.username; // Set username\n         this.email = profile.user.email; // Set e-mail\n    });\n    }\n\n    deletequiz(id){\n        this.quizservice.deletequiz(id).subscribe();\n\n          this.quizservice.getquiz()\n               .subscribe(quizes=>{\n                   this.quizes=quizes;\n        });\n    }\n    onLogoutClick() {\n      this.authService.logout(); // Logout user\n      //this.flashMessagesService.show('You are logged out', { cssClass: 'alert-info' }); // Set custom flash message\n      this.router.navigate(['/']); // Navigate back to home page\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/author/author.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { AuthorService } from '../services/author.service';\r\nimport { Router } from '@angular/router';\r\nimport { AuthGuard } from '../guards/auth.guard';\r\n\r\n@Component({\r\n  selector: 'author-login',\r\n  templateUrl: './authorlogin.html'\r\n})\r\nexport class AuthorComponent implements OnInit {\r\n  messageClass;\r\n  message;\r\n  processing = false;\r\n  form;\r\n  previousUrl;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthorService,\r\n    private router: Router,\r\n    private authGuard: AuthGuard\r\n  ) {\r\n    this.createForm(); // Create Login Form when component is constructed\r\n  }\r\n\r\n  // Function to create login form\r\n  createForm() {\r\n    this.form = this.formBuilder.group({\r\n      username: ['', Validators.required], // Username field\r\n      password: ['', Validators.required] // Password field\r\n    });\r\n  }\r\n\r\n  // Function to disable form\r\n  disableForm() {\r\n    this.form.controls['username'].disable(); // Disable username field\r\n    this.form.controls['password'].disable(); // Disable password field\r\n  }\r\n\r\n  // Function to enable form\r\n  enableForm() {\r\n    this.form.controls['username'].enable(); // Enable username field\r\n    this.form.controls['password'].enable(); // Enable password field\r\n  }\r\n\r\n  // Functiont to submit form and login user\r\n  onLoginSubmit() {\r\n    this.processing = true; // Used to submit button while is being processed\r\n    this.disableForm(); // Disable form while being process\r\n    // Create user object from user's input\r\n    const user = {\r\n      username: this.form.get('username').value, // Username input field\r\n      password: this.form.get('password').value // Password input field\r\n    }\r\n\r\n    // Function to send login data to API\r\n    this.authService.login(user).subscribe(data => {\r\n      // Check if response was a success or error\r\n      if (!data.success) {\r\n        this.messageClass = 'alert alert-danger'; // Set bootstrap error class\r\n        this.message = data.message; // Set error message\r\n        this.processing = false; // Enable submit button\r\n        this.enableForm(); // Enable form for editting\r\n      } else {\r\n        this.messageClass = 'alert alert-success'; // Set bootstrap success class\r\n        this.message = data.message; // Set success message\r\n        // Function to store user's token in client local storage\r\n        this.authService.storeUserData(data.token, data.user);\r\n        // After 2 seconds, redirect to dashboard page\r\n        setTimeout(() => {\r\n          // Check if user was redirected or logging in for first time\r\n          if (this.previousUrl) {\r\n            this.router.navigate([this.previousUrl]); // Redirect to page they were trying to view before\r\n          } else {\r\n            this.router.navigate(['/admin']); // Navigate to dashboard view\r\n          }\r\n        }, 2000);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    // On page load, check if user was redirected to login\r\n    if (this.authGuard.redirectUrl) {\r\n      this.messageClass = 'alert alert-danger'; // Set error message: need to login\r\n      this.message = 'You must be logged in to view that page.'; // Set message\r\n      this.previousUrl = this.authGuard.redirectUrl; // Set the previous URL user was redirected from\r\n      this.authGuard.redirectUrl = undefined; // Erase previous URL\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/authorlogin/authorlogin.ts","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { AuthorService } from '../services/author.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesModule } from 'angular2-flash-messages/module';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n\nexport class HomeComponent implements OnInit {\n  username = '';\n  email = '';\n\n  constructor(\n    public authService: AuthService,\n    public authorService: AuthorService,\n    private router: Router,\n    //private flashMessagesService: FlashMessagesService\n  ) { }\n\n  onLogoutClick() {\n    this.authService.logout(); // Logout user\n    //this.flashMessagesService.show('You are logged out', { cssClass: 'alert-info' }); // Set custom flash message\n    this.router.navigate(['/']); // Navigate back to home page\n  }\n\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe(profile => {\n     this.username = profile.user.username; // Set username\n     this.email = profile.user.email; // Set e-mail\n});\nthis.authorService.getProfile().subscribe(profile => {\n this.username = profile.user.username; // Set username\n this.email = profile.user.email; // Set e-mail\n});\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home.component.ts","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport { AuthGuard } from '../guards/auth.guard';\nimport {NavbarComponent} from '../nav/navbar'\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  messageClass;\n  message;\n  processing = false;\n  form: FormGroup;\n  previousUrl;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private authGuard: AuthGuard\n  ) {\n    this.createForm(); // Create Login Form when component is constructed\n  }\n\n  // Function to create login form\n  createForm() {\n    this.form = this.formBuilder.group({\n      username: ['', Validators.required], // Username field\n      password: ['', Validators.required] // Password field\n    });\n  }\n\n  // Function to disable form\n  disableForm() {\n    this.form.controls['username'].disable(); // Disable username field\n    this.form.controls['password'].disable(); // Disable password field\n  }\n\n  // Function to enable form\n  enableForm() {\n    this.form.controls['username'].enable(); // Enable username field\n    this.form.controls['password'].enable(); // Enable password field\n  }\n\n  // Functiont to submit form and login user\n  onLoginSubmit() {\n    this.processing = true; // Used to submit button while is being processed\n    this.disableForm(); // Disable form while being process\n    // Create user object from user's input\n    const user = {\n      username: this.form.get('username').value, // Username input field\n      password: this.form.get('password').value // Password input field\n    }\n\n    // Function to send login data to API\n    this.authService.login(user).subscribe(data => {\n      // Check if response was a success or error\n      if (!data.success) {\n        this.messageClass = 'alert alert-danger'; // Set bootstrap error class\n        this.message = data.message; // Set error message\n        this.processing = false; // Enable submit button\n        this.enableForm(); // Enable form for editting\n      } else {\n        this.messageClass = 'alert alert-success'; // Set bootstrap success class\n        this.message = data.message; // Set success message\n        // Function to store user's token in client local storage\n        this.authService.storeUserData(data.token, data.user);\n        // After 2 seconds, redirect to dashboard page\n        setTimeout(() => {\n          // Check if user was redirected or logging in for first time\n          if (this.previousUrl) {\n            this.router.navigate([this.previousUrl]); // Redirect to page they were trying to view before\n          } else {\n            this.router.navigate(['/quiz']); // Navigate to dashboard view\n          }\n        }, 2000);\n      }\n    });\n  }\n\n  ngOnInit() {\n    // On page load, check if user was redirected to login\n    if (this.authGuard.redirectUrl) {\n      this.messageClass = 'alert alert-danger'; // Set error message: need to login\n      this.message = 'You must be logged in to view that page.'; // Set message\n      this.previousUrl = this.authGuard.redirectUrl; // Set the previous URL user was redirected from\n      this.authGuard.redirectUrl = undefined; // Erase previous URL\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.html',\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  firstname = '';\r\n  lastname = '';\r\n  mobile = '';\r\n  username = '';\r\n  email = '';\r\n\r\n  constructor(\r\n    public authService: AuthService,\r\n    private router: Router,\r\n    //private flashMessagesService: FlashMessagesService\r\n  ) { }\r\n\r\n  // Function to logout user\r\n  onLogoutClick() {\r\n    this.authService.logout(); // Logout user\r\n    //this.flashMessagesService.show('You are logged out', { cssClass: 'alert-info' }); // Set custom flash message\r\n    this.router.navigate(['/']); // Navigate back to home page\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.authService.getProfile().subscribe(profile => {\r\n      this.firstname=profile.user.firstname;\r\n      this.lastname=profile.user.lastname;\r\n      this.mobile=profile.user.mobile;\r\n\r\n     this.username = profile.user.username; // Set username\r\n     this.email = profile.user.email; // Set e-mail\r\n});\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/nav/navbar.ts","import { Component, OnInit } from '@angular/core';\nimport { Location } from \"@angular/common\";\nimport { AuthService } from '../services/auth.service';\nimport { QuizService } from '../services/quiz.service';\nimport { Router } from '@angular/router';\nimport { HelperService } from '../services/helper.service';\nimport { Option, Question, Quiz, QuizConfig } from '../../models/index';\n\n@Component({\n  selector: 'app-quiz',\n  templateUrl: './quiz.component.html',\n  styleUrls: ['./quiz.component.css'],\n  providers: [QuizService]\n})\nexport class QuizComponent implements OnInit {\n  username = '';\n  email = '';\n  quizes: any[];\n  quiz: Quiz = new Quiz(null);\n  mode = '';\n  quizName: string;\n  config: QuizConfig = {\n    'allowBack': true,\n    'allowReview': true,\n    'autoMove': false,  // if true, it will move to next question automatically when answered.\n    'duration': 0,  // indicates the time in which quiz needs to be completed. 0 means unlimited.\n    'pageSize': 1,\n    'requiredAll': false,  // indicates if you must answer all the questions before submitting.\n    'richText': false,\n    'shuffleQuestions': false,\n    'shuffleOptions': false,\n    'showClock': false,\n    'showPager': true,\n    'theme': 'none'\n  };\n\n  pager = {\n    index: 0,\n    size: 1,\n    count: 1\n  };\n\n  constructor(private quizService: QuizService,  private location: Location,   public authService: AuthService, private router: Router,) { }\n\n    ngOnInit() {\n          this.quizService.getquiz().\n                 subscribe(quizes=>{\n                  this.quizes=quizes;\n                 // console.log(this.quizes);\n               });\n\n   // this.quizName = this.quizes[0].id;\n     //console.log(this.quizes);\n    //this.loadQuiz(this.quizName);\n\n    this.authService.getProfile().subscribe(profile => {\n     this.username = profile.user.username; // Set username\n     this.email = profile.user.email; // Set e-mail\n});\n   }\n\n    onLogoutClick() {\n     this.authService.logout(); // Logout user\n  //    //this.flashMessagesService.show('You are logged out', { cssClass: 'alert-info' }); // Set custom flash message\n     this.router.navigate(['/']); // Navigate back to home page\n   }\n\n  loadQuiz(quizName: string) {\n    console.log(quizName);\n\n    this.quizService.get(quizName).subscribe(res => {\n      //console.log(\"responce from server \");\n      //console.log(res);\n\n      this.quiz = new Quiz(res);\n      this.pager.count = this.quiz.questions.length;\n    });\n    this.mode = 'quiz';\n  }\n\n  get filteredQuestions() {\n    return (this.quiz.questions) ?\n      this.quiz.questions.slice(this.pager.index, this.pager.index + this.pager.size) : [];\n  }\n\n  onSelect(question: Question, option: Option) {\n    if (question.questionTypeId === 1) {\n      question.options.forEach((x) => { if (x.id !== option.id) x.selected = false; });\n    }\n\n    if (this.config.autoMove) {\n      this.goTo(this.pager.index + 1);\n    }\n  }\n\n  goTo(index: number) {\n    if (index >= 0 && index < this.pager.count) {\n      this.pager.index = index;\n      this.mode = 'quiz';\n    }\n  }\n\n  isAnswered(question: Question) {\n    return question.options.find(x => x.selected) ? 'Answered' : 'Not Answered';\n  };\n\n  isCorrect(question: Question) {\n    return question.options.every(x => x.selected === x.isAnswer) ? 'correct' : 'wrong';\n  };\n\n  onSubmit() {\n    let answers = [];\n    this.quiz.questions.forEach(x => answers.push({ 'quizId': this.quiz.id, 'questionId': x.id, 'answered': x.answered }));\n\n    // Post your data to the server here. answers contains the questionId and the users' answer.\n    console.log(this.quiz.questions);\n    this.mode = 'result';\n  }\n\n   goBack(): void {\n        this.location.back();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/quiz/quiz.component.ts","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  form: FormGroup;\n  message;\n  messageClass;\n  processing = false;\n  emailValid;\n  emailMessage;\n  usernameValid;\n  usernameMessage;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {\n    this.createForm(); // Create Angular 2 Form when component loads\n  }\n\n  // Function to create registration form\n  createForm() {\n    this.form = this.formBuilder.group({\n      //firstname input\n      firstname: ['', Validators.compose([\n        Validators.required, // Field is required\n        Validators.maxLength(30),\n        this.validateFirstname // Custom validation\n      ])],\n\n      //lastname input\n      lastname: ['', Validators.compose([\n        Validators.required, // Field is required\n        Validators.maxLength(30),\n        this.validateLastname // Custom validation\n      ])],\n      //mobile\n      mobile: ['', Validators.compose([\n        Validators.required, // Field is required\n        Validators.minLength(10), // Minimum length is 5 characters\n        Validators.maxLength(10),\n        this.validateMobile // Custom validation\n      ])],\n      // Email Input\n      email: ['', Validators.compose([\n        Validators.required, // Field is required\n        Validators.minLength(5), // Minimum length is 5 characters\n        Validators.maxLength(30), // Maximum length is 30 characters\n        this.validateEmail // Custom validation\n      ])],\n      // Username Input\n      username: ['', Validators.compose([\n        Validators.required, // Field is required\n        Validators.minLength(3), // Minimum length is 3 characters\n        Validators.maxLength(15), // Maximum length is 15 characters\n        this.validateUsername // Custom validation\n      ])],\n      // Password Input\n      password: ['', Validators.compose([\n        Validators.required, // Field is required\n        Validators.minLength(8), // Minimum length is 8 characters\n        Validators.maxLength(35), // Maximum length is 35 characters\n        this.validatePassword // Custom validation\n      ])],\n      // Confirm Password Input\n      confirm: ['', Validators.required] // Field is required\n    }, { validator: this.matchingPasswords('password', 'confirm') }); // Add custom validator to form for matching passwords\n  }\n\n  // Function to disable the registration form\n  disableForm() {\n  this.form.controls['firstname'].disable();\n  this.form.controls['lastname'].disable();\n  this.form.controls['mobile'].disable();\n    this.form.controls['email'].disable();\n    this.form.controls['username'].disable();\n    this.form.controls['password'].disable();\n    this.form.controls['confirm'].disable();\n  }\n\n  // Function to enable the registration form\n  enableForm() {\n  this.form.controls['firstname'].enable();\n  this.form.controls['lastname'].enable();\n  this.form.controls['mobile'].enable();\n    this.form.controls['email'].enable();\n    this.form.controls['username'].enable();\n    this.form.controls['password'].enable();\n    this.form.controls['confirm'].enable();\n  }\n\n//function to validate Firstname\nvalidateFirstname(controls) {\n  // Create a regular expression\n  const regExp = new RegExp(/^[A-z]+$/);\n  if (regExp.test(controls.value)) {\n    return null; // Return as valid firstname\n  } else {\n    return { 'validateFirstname': true } // Return as invalid fisrtname\n  }\n}\n\n//function to validate Lastname\nvalidateLastname(controls) {\n  // Create a regular expression\n  const regExp = new RegExp(/^[A-z]+$/);\n  // Test email against regular expression\n  if (regExp.test(controls.value)) {\n    return null; // Return as valid lastname\n  } else {\n    return { 'validateLastname': true } // Return as invalid lastname\n  }\n}\n\n//function to validate Mobile\nvalidateMobile(controls) {\n  // Create a regular expression\nconst regExp = new RegExp(/^[0-9]+$/);\n  if (regExp.test(controls.value)) {\n    return null; // Return as valid Mobile\n  } else {\n    return { 'validateMobile': true } // Return as invalid Mobile\n  }\n}\n\n  // Function to validate e-mail is proper format\n  validateEmail(controls) {\n    // Create a regular expression\n    const regExp = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n    // Test email against regular expression\n    if (regExp.test(controls.value)) {\n      return null; // Return as valid email\n    } else {\n      return { 'validateEmail': true } // Return as invalid email\n    }\n  }\n\n  // Function to validate username is proper format\n  validateUsername(controls) {\n    // Create a regular expression\n    const regExp = new RegExp(/^[a-zA-Z0-9]+$/);\n    // Test username against regular expression\n    if (regExp.test(controls.value)) {\n      return null; // Return as valid username\n    } else {\n      return { 'validateUsername': true } // Return as invalid username\n    }\n  }\n\n  // Function to validate password\n  validatePassword(controls) {\n    // Create a regular expression\n    const regExp = new RegExp(/^(?=.*?[a-z])(?=.*?[A-Z])(?=.*?[\\d])(?=.*?[\\W]).{8,35}$/);\n    // Test password against regular expression\n    if (regExp.test(controls.value)) {\n      return null; // Return as valid password\n    } else {\n      return { 'validatePassword': true } // Return as invalid password\n    }\n  }\n\n  // Funciton to ensure passwords match\n  matchingPasswords(password, confirm) {\n    return (group: FormGroup) => {\n      // Check if both fields are the same\n      if (group.controls[password].value === group.controls[confirm].value) {\n        return null; // Return as a match\n      } else {\n        return { 'matchingPasswords': true } // Return as error: do not match\n      }\n    }\n  }\n\n  // Function to submit form\n  onRegisterSubmit() {\n    this.processing = true; // Used to notify HTML that form is in processing, so that it can be disabled\n    this.disableForm(); // Disable the form\n    // Create user object form user's inputs\n    const user = {\n    firstname: this.form.get('firstname').value,\n    lastname: this.form.get('lastname').value,\n    mobile: this.form.get('mobile').value,\n      email: this.form.get('email').value, // E-mail input field\n      username: this.form.get('username').value, // Username input field\n      password: this.form.get('password').value // Password input field\n    }\n\n    // Function from authentication service to register user\n    this.authService.registerUser(user).subscribe(data => {\n      // Resposne from registration attempt\n      if (!data.success) {\n        this.messageClass = 'alert alert-danger'; // Set an error class\n        this.message = data.message; // Set an error message\n        this.processing = false; // Re-enable submit button\n        this.enableForm(); // Re-enable form\n      } else {\n        this.messageClass = 'alert alert-success'; // Set a success class\n        this.message = data.message; // Set a success message\n        // After 2 second timeout, navigate to the login page\n        setTimeout(() => {\n          this.router.navigate(['/login']); // Redirect to login view\n        }, 2000);\n      }\n    });\n\n  }\n\n  // Function to check if e-mail is taken\n  checkEmail() {\n    // Function from authentication file to check if e-mail is taken\n    this.authService.checkEmail(this.form.get('email').value).subscribe(data => {\n      // Check if success true or false was returned from API\n      if (!data.success) {\n        this.emailValid = false; // Return email as invalid\n        this.emailMessage = data.message; // Return error message\n      } else {\n        this.emailValid = true; // Return email as valid\n        this.emailMessage = data.message; // Return success message\n      }\n    });\n  }\n\n  // Function to check if username is available\n  checkUsername() {\n    // Function from authentication file to check if username is taken\n    this.authService.checkUsername(this.form.get('username').value).subscribe(data => {\n      // Check if success true or success false was returned from API\n      if (!data.success) {\n        this.usernameValid = false; // Return username as invalid\n        this.usernameMessage = data.message; // Return error message\n      } else {\n        this.usernameValid = true; // Return username as valid\n        this.usernameMessage = data.message; // Return success message\n      }\n    });\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/register/register.component.ts","export * from './option';\nexport * from './question';\nexport * from './quiz';\nexport * from './quiz-config';\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/index.ts","export class Option {\n    id: number;\n    questionId: number;\n    name: string;\n    isAnswer: boolean;\n    selected: boolean;\n\n    constructor(data: any) {\n        data = data || {};\n        this.id = data.id;\n        this.questionId = data.questionId;\n        this.name = data.name;\n        this.isAnswer = data.isAnswer;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/option.ts","import { Option } from './option';\n\nexport class Question {\n    id: number;\n    name: string;\n    questionTypeId: number;\n    options: Option[];\n    answered: boolean;\n\n    constructor(data: any) {\n        data = data || {};\n        this.id = data.id;\n        this.name = data.name;\n        this.questionTypeId = data.questionTypeId;\n        this.options = [];\n        data.options.forEach(o => {\n            this.options.push(new Option(o));\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/question.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 315;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_gendir async\n// module id = 315\n// module chunks = 1","import './polyfills.ts';\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = '';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { routing }  from './app.routing';\nimport { AppComponent } from './app.component';\n\nimport { AddquizComponent } from './addquiz/addquiz.component';\nimport { AdminComponent } from './author/author.component'\nimport { NavbarComponent } from './nav/navbar';\n\nimport { RegisterComponent } from './register/register.component';\nimport { AuthService } from './services/auth.service';\nimport { QuizService } from './services/quiz.service';\nimport { HelperService } from './services/helper.service';\nimport { AuthorService } from './services/author.service';\nimport { LoginComponent } from './login/login.component';\nimport { AuthorComponent } from './authorlogin/authorlogin';\nimport { FlashMessagesModule } from 'angular2-flash-messages/module';\nimport { AuthGuard } from './guards/auth.guard';\nimport { NotAuthGuard } from './guards/notAuth.guard';\n\nimport { QuizComponent } from './quiz/quiz.component';\nimport { HomeComponent } from './home/home.component';\nimport { ViewQuizComponent } from './adminquiz/viewquiz.component';\n\n//import { NavbarComponent } from './nav/navbar';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuizComponent,\n    HomeComponent,\n    RegisterComponent,\n    LoginComponent,\n    NavbarComponent,\n    AuthorComponent,\n    AddquizComponent,\n    AdminComponent,\n    ViewQuizComponent\n  //  NavbarComponent\n  ],\n\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    routing,\n    ReactiveFormsModule,\n    FlashMessagesModule\n  ],\n  providers: [AuthService, AuthorService, AuthGuard, NotAuthGuard, QuizService, HelperService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\nimport { QuizComponent } from './quiz/quiz.component';\nimport { NgModule } from '@angular/core';\n\n\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { AuthorComponent } from './authorlogin/authorlogin';\nimport {AddquizComponent} from './addquiz/addquiz.component';\nimport { AdminComponent } from './author/author.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { NotAuthGuard } from './guards/notAuth.guard';\nimport { NavbarComponent } from './nav/navbar';\nimport { ViewQuizComponent } from './adminquiz/viewquiz.component';\n\n\nconst appRoutes: Routes = [\n  {  path: 'quiz', component: QuizComponent },\n  {  path: '', component: HomeComponent }, // Default Route,\n  {  path: 'register', component: RegisterComponent// Register Route\n  //  canActivate: [NotAuthGuard] // User must NOT be logged in to view this route\n  },\n  {\n    path: 'login',\n    component: LoginComponent// Login Route\n//canActivate: [NotAuthGuard] // User must NOT be logged in to view this route\n  },\n  {\n    path: 'admin', component:AdminComponent\n\n  },\n {\n   path:'author', component:AddquizComponent\n },\n\n  {\n    path: 'authorlogin',\n    component: AuthorComponent// Login Route\n   //canActivate: [NotAuthGuard] // User must NOT be logged in to view this route\n  },\n{path: 'navbar', component: NavbarComponent\n},\n\n// { path: '**', component: HomeComponent },\n{ path: 'viewquiz/:id', component: ViewQuizComponent }\n\n];\n\nexport const routing = RouterModule.forRoot(appRoutes);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.routing.ts","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class NotAuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  // Function to determine whether user is authorized to view route\n  canActivate() {\n    // Check if user is logged in\n    if (this.authService.loggedIn()) {\n      this.router.navigate(['/']); // Return error, route to home\n      return false; // Return false: user not allowed to view route\n    } else {\n      return true; // Return true: user is allowed to view route\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/guards/notAuth.guard.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class HelperService {\n  static toBool(val) {\n    if (val == 'undefined' || val == null || val == '' || val == 'false' || val == 'False')\n      return false;\n    else // if (val == true || val == 'true' || val == 'True')\n      return true;\n  };\n  static shuffle(array) {\n    var currentIndex = array.length, temp, randomIndex;\n\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      temp = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temp;\n    }\n    return array;\n  }\n  static extend(out) {\n    out = out || {};\n\n    for (var i = 1; i < arguments.length; i++) {\n      if (!arguments[i])\n        continue;\n\n      for (var key in arguments[i]) {\n        if (arguments[i].hasOwnProperty(key))\n          out[key] = arguments[i][key];\n      }\n    }\n    return out;\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/helper.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","export class QuizConfig {\n    allowBack: boolean;\n    allowReview: boolean;\n    autoMove: boolean;  // if boolean; it will move to next question automatically when answered.\n    duration: number;  // indicates the time in which quiz needs to be completed. 0 means unlimited.\n    pageSize: number;\n    requiredAll: boolean;  // indicates if you must answer all the questions before submitting.\n    richText: boolean;\n    shuffleQuestions: boolean;\n    shuffleOptions: boolean;\n    showClock: boolean;\n    showPager: boolean;\n    theme: string;\n\n    constructor(data: any) {\n        data = data || {};\n        this.allowBack = data.allowBack;\n        this.allowReview = data.allowReview;\n        this.autoMove = data.autoMove;\n        this.duration = data.duration;\n        this.pageSize = data.pageSize;\n        this.requiredAll = data.requiredAll;\n        this.richText = data.richText;\n        this.shuffleQuestions = data.shuffleQuestions;\n        this.shuffleOptions = data.shuffleOptions;\n        this.showClock = data.showClock;\n        this.showPager = data.showPager;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/quiz-config.ts","import { QuizConfig } from './quiz-config';\nimport { Question } from './question';\n\nexport class Quiz {\n    id: number;\n    name: string;\n    author: string;\n    config: QuizConfig;\n    questions: Question[];\n\n   \n\n    constructor(data: any) {\n        if (data) {\n           data.forEach((temp)=>{\n             this.id=temp.id;\n             this.name=temp.name;\n             this.author = temp.author;\n             this.questions = [];\n             temp.questions.forEach(q => {\n                 this.questions.push(new Question(q));\n            });\n           })\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/quiz.ts","module.exports = \"label {\\r\\n  font-size: 18px;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/addquiz/addquiz.component.css\n// module id = 334\n// module chunks = 1","module.exports = \".btn-group button {\\n    background-color: #4CAF50; /* Green background */\\n    border: 1px solid green; /* Green border */\\n    color: white; /* White text */\\n    padding: 10px 24px; /* Some padding */\\n    cursor: pointer; /* Pointer/hand icon */\\n    float: left; /* Float the buttons side by side */\\n}\\n\\n/* Clear floats (clearfix hack) */\\n.btn-group:after {\\n    content: \\\"\\\";\\n    clear: both;\\n    display: inline;\\n}\\n\\n.btn-group button:not(:last-child) {\\n    border-right: none; /* Prevent double borders */\\n}\\n\\n/* Add a background color on hover */\\n.btn-group button:hover {\\n    background-color: #3e8e41;\\n}\\n\\n#head {\\n  color: brown;\\n}\\n\\na {\\n  color: brown;\\n}\\na:active {\\n  color: yellow;\\n}\\n\\na:hover{\\n  color: red;\\n}\\n\\n.quizBox {\\n  margin-top: 15px;\\n  margin-left: 250px;\\n  margin-right: 400px;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/adminquiz/viewquiz.component.css\n// module id = 335\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 336\n// module chunks = 1","module.exports = \"#quiz {\\n    font-family: \\\"Trebuchet MS\\\", Arial, Helvetica, sans-serif;\\n    border-collapse: collapse;\\n    width: 100%;\\n}\\n\\n#quiz td, #quiz th {\\n    border: 1px solid #ddd;\\n    padding: 8px;\\n}\\n\\n#quiz tr:nth-child(even){background-color: #f2f2f2;}\\n\\n#quiz tr:hover {background-color: #ddd;}\\n\\n#quiz th {\\n    padding-top: 12px;\\n    padding-bottom: 12px;\\n    text-align: left;\\n    background-color: #4CAF50;\\n    color: white;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/author/author.component.css\n// module id = 337\n// module chunks = 1","module.exports = \".thumbnail {\\r\\n  text-align: center;\\r\\n  position: relative;\\r\\n  width:100;\\r\\n  height:100;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.css\n// module id = 338\n// module chunks = 1","module.exports = \"form {\\r\\n  background: #888;\\r\\n\\r\\n}\\r\\nbody {\\r\\n  background: #eee;\\r\\n  height: 700px;\\r\\n}\\r\\nlabel {\\r\\n  font-size: 20px;\\r\\n}\\r\\nul {\\r\\n  color: purple;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.css\n// module id = 339\n// module chunks = 1","module.exports = \".btn-group button {\\n    background-color: #4CAF50; /* Green background */\\n    border: 1px solid green; /* Green border */\\n    color: white; /* White text */\\n    padding: 10px 24px; /* Some padding */\\n    cursor: pointer; /* Pointer/hand icon */\\n    float: left; /* Float the buttons side by side */\\n}\\n\\n/* Clear floats (clearfix hack) */\\n.btn-group:after {\\n    content: \\\"\\\";\\n    clear: both;\\n    display: inline;\\n}\\n\\n.btn-group button:not(:last-child) {\\n    border-right: none; /* Prevent double borders */\\n}\\n\\n/* Add a background color on hover */\\n.btn-group button:hover {\\n    background-color: #3e8e41;\\n}\\n\\n#head {\\r\\n  color: brown;\\n}\\r\\n\\r\\na {\\r\\n  color: brown;\\r\\n}\\r\\na:active {\\r\\n  color: yellow;\\r\\n}\\r\\n\\r\\na:hover{\\r\\n  color: red;\\r\\n}\\r\\n\\r\\n.quizBox {\\r\\n  margin-top: 15px;\\r\\n  margin-left: 250px;\\r\\n  margin-right: 400px;\\r\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/quiz/quiz.component.css\n// module id = 340\n// module chunks = 1","module.exports = \"label {\\r\\n  font-size: 18px;\\r\\n}\\r\\nform {\\r\\n  margin: auto;\\r\\n  background: #bbb;\\r\\n}\\r\\nh1 {\\r\\n  background: #08f;\\r\\n  color: #000;\\r\\n}\\r\\nimg {\\r\\n  float: left;\\r\\n}\\r\\nul {\\r\\n  color: purple;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/register/register.component.css\n// module id = 341\n// module chunks = 1","module.exports = \"<body style=\\\"background: #eee\\\">\\n  <h1 style= \\\"padding: 20px; text-align:center;\\\"> Add Quiz </h1>\\n\\n  <div>\\n<form #formRef1=\\\"ngForm\\\" style=\\\" padding: 12px;\\\" (ngSubmit) = \\\"onSubmit(formRef1.value)\\\" >\\n\\n  <div style=\\\"width:500px; margin: auto;\\\">\\n    <div style=\\\"\\\">\\n   <label for=\\\"name\\\">Quiz Name </label>\\n   <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"quizname\\\" name=\\\"quizname\\\"  [(ngModel)]=\\\"quizname\\\"  required  minlength=\\\"5\\\">\\n</div>\\n   <div style=\\\"\\\">\\n   <label for=\\\"name\\\">Author Name </label>\\n   <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"authorname\\\" name=\\\"authorname\\\"  [(ngModel)]=\\\"authorname\\\"  required  minlength=\\\"5\\\">\\n  </div>\\n  </div>\\n\\n <br>\\n   <div >\\n     <h4>Add Questions to Quiz</h4>\\n    <br>\\n </div>\\n\\n  <div *ngIf=\\\"question?.length > 0\\\"><h5 style=\\\"color:red\\\">\\n      {{ question.length }} Questions Added to Quiz\\n    </h5>\\n  </div>\\n\\n<br>\\n\\n <form #formRef=\\\"ngForm\\\" (ngSubmit) = \\\"addQuestion(formRef.value); formRef.reset()\\\"  >\\n\\n  <label for=\\\"name\\\"> Question </label>\\n   <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"qname\\\" name=\\\"qname\\\" [(ngModel)]=\\\"qname\\\"   required  >\\n<div style=\\\"width:600px\\\">\\n  <label for=\\\"name\\\"> Option1 </label>\\n     <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"op1\\\" name=\\\"op1\\\"   [(ngModel)]=\\\"op1\\\" required  >\\n   <label for=\\\"name\\\"> Option2 </label>\\n       <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"op2\\\" name=\\\"op2\\\"   [(ngModel)]=\\\"op2\\\" required >\\n   <label for=\\\"name\\\"> Option3 </label>\\n       <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"op3\\\" name=\\\"op3\\\"  [(ngModel)]=\\\"op3\\\"  required >\\n   <label for=\\\"name\\\"> Option4 </label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"op4\\\" name=\\\"op4\\\"  [(ngModel)]=\\\"op4\\\"  required  >\\n   <label for=\\\"name\\\"> Answer </label>\\n    <select class=\\\"form-control\\\" id=\\\"answer\\\" name=\\\"answer\\\" [(ngModel)]=\\\"answer\\\" required>\\n    <option  [value]=1> 1 </option>\\n    <option  [value]=2> 2 </option>\\n    <option  [value]=3> 3 </option>\\n    <option  [value]=4> 4 </option>\\n  </select>\\n  </div>\\n  <br>\\n\\n<button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!formRef.form.valid\\\" >Add Question </button>\\n </form>\\n\\n<br> <br>\\n <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" >Submit </button>\\n<button class=\\\"btn btn-danger\\\" (click)=\\\"goBack()\\\">Back</button>\\n</form>\\n\\n</div>\\n</body>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/addquiz/addquiz.component.html\n// module id = 342\n// module chunks = 1","module.exports = \"<div class=\\\"row\\\">\\n  <a style=\\\"margin-left: 20px\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" routerLink=\\\"/\\\"><h2>Home</h2></a>\\n\\n<!--<button style=\\\"margin-left: 1180px; margin-top: 6px;\\\"class=\\\"btn btn-success\\\"><a *ngIf=\\\"authService.loggedIn()\\\" href=\\\"#\\\" style=\\\"float: right;\\\" (click)=\\\"onLogoutClick()\\\">Logout</a></button>-->\\n</div>\\n<h1 id=\\\"head\\\" style=\\\"text-align: center; \\\">QUIZ Detail </h1>\\n  <br>\\n\\n  <!--<h3 style=\\\"margin: none; text-align: center; color: purple;\\\" *ngIf=\\\"authService.loggedIn()\\\"> Welcome {{username+'!'}} You Can Start Quiz.</h3>-->\\n<br>\\n\\n\\n<br>\\n<br>\\n<div id=\\\"quiz\\\" >\\n  <div *ngIf=\\\"mode!=''\\\">\\n  <h1 class=\\\"text-sm-center\\\">{{quiz.name}}</h1>\\n  <hr />\\n</div>\\n<br>\\n\\n  <div *ngIf=\\\"mode!='' && quiz\\\">\\n    <div *ngFor=\\\"let question of filteredQuestions;\\\">\\n      <div class=\\\"badge badge-info\\\">Question {{pager.index + 1}} of {{pager.count}}.</div>\\n      <br>\\n      <h2>{{pager.index + 1}}. <span [innerHTML]=\\\"question.name\\\"></span></h2>\\n      <br>\\n      <div class=\\\"row text-left options\\\">\\n        <div class=\\\"col-md-6\\\" *ngFor=\\\"let option of question.options\\\">\\n          <div class=\\\"option\\\">\\n            <label class=\\\"\\\" [attr.for]=\\\"option.id\\\">\\n                <input id=\\\"{{option.id}}\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"option.selected\\\" (change)=\\\"onSelect(question, option);\\\" />\\n                {{option.name}}\\n            </label>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <hr />\\n    <br>\\n    <br>\\n    <div class=\\\"text-sm-center\\\" *ngIf=\\\"mode!==''\\\">\\n      <button class=\\\"btn btn-default\\\" *ngIf=\\\"config.allowBack\\\" (click)=\\\"goTo(0);\\\">First</button>\\n      <button class=\\\"btn btn-default\\\" *ngIf=\\\"config.allowBack\\\" (click)=\\\"goTo(pager.index - 1);\\\">Prev</button>\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"goTo(pager.index + 1);\\\">Next</button>\\n      <button class=\\\"btn btn-default\\\" *ngIf=\\\"config.allowBack\\\" (click)=\\\"goTo(pager.count - 1);\\\">Last</button>\\n      <!--<pagination *ngIf=\\\"config.showPager\\\" direction-links=\\\"false\\\" total-items=\\\"totalItems\\\" items-per-page=\\\"itemsPerPage\\\" ng-model=\\\"currentPage\\\" ng-change=\\\"pageChanged()\\\"></pagination>-->\\n    </div>\\n  </div>\\n  <br>\\n\\n  <!--<div class=\\\"row review\\\" *ngIf=\\\"mode=='review'\\\">\\n    <div class=\\\"col-sm-4\\\" *ngFor=\\\"let question of quiz.questions; let index = index;\\\">\\n      <div (click)=\\\"goTo(index)\\\" class=\\\"{{ isAnswered(question) == 'Answered'? 'answered': 'not-answered' }}\\\">{{index + 1}}. {{ isAnswered(question) }}</div>\\n    </div>\\n  </div>-->\\n  <!--<div class=\\\"result\\\" *ngIf=\\\"mode=='result'\\\">\\n    <h2>Quiz Result</h2>\\n    <div *ngFor=\\\"let question of quiz.questions; let index = index\\\">\\n      <div class=\\\"result-question\\\">\\n        <h4>{{index + 1}}. {{question.name}}</h4>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\" *ngFor=\\\"let Option of question.options\\\">\\n            <input id=\\\"{{Option.id}}\\\" type=\\\"checkbox\\\" disabled=\\\"disabled\\\" [(ngModel)]=\\\"Option.selected\\\" /> {{Option.name}}\\n          </div>\\n        </div>\\n        <div class=\\\"alert {{ isCorrect(question) == 'correct'? 'alert-success': 'alert-danger'}}\\\">Your answer is {{isCorrect(question)}}.</div>\\n      </div>\\n    </div>\\n  </div>-->\\n  <hr />\\n  <!--<div *ngIf=\\\"mode!==''\\\">\\n    <button class=\\\"btn btn-default\\\" (click)=\\\"mode = 'review'\\\">Review</button>\\n    <button class=\\\"btn btn-default\\\" (click)=\\\"onSubmit();\\\">Submit Quiz</button>\\n    <button class=\\\"btn btn-default\\\" (click)=\\\"goBack()\\\">Back</button>\\n  </div>-->\\n    <div>\\n       <button class=\\\"btn btn-primary\\\" (click)=\\\"goBack()\\\">Back</button>\\n    </div>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/adminquiz/viewquiz.component.html\n// module id = 343\n// module chunks = 1","module.exports = \"\\n\\n<router-outlet> </router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 344\n// module chunks = 1","module.exports = \"<div *ngIf=\\\"authService.loggedIn()\\\">\\n\\n<a style=\\\"float:right; margin-right:20px\\\" *ngIf=\\\"authService.loggedIn()\\\" href=\\\"#\\\" (click)=\\\"onLogoutClick()\\\">Logout</a>\\n\\n<div class=\\\"jumbotron text-center\\\">\\n\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-9\\\">\\n  <h1 style=\\\"text-align:center; float: right; margin-right: 150px;\\\">QUIZ APPLICATION</h1>\\n</div>\\n<div class=\\\"col-xs-6\\\">\\n</div>\\n\\n</div>\\n  <br>\\n  <p class=\\\"lead\\\">Welcome to the MEAN Stack Quiz Applicatin by <strong>MEAN HUNTERS</strong></p>\\n  <br>\\n\\n  <h3 > Welcome {{username}}</h3>\\n</div>\\n<div style=\\\"margin: auto;\\\" class='panel panel-primary'>\\n    <div class='panel-heading'>\\n\\n    </div>\\n    <br>\\n        <table id=\\\"quiz\\\" class='table table-striped table-condensed'>\\n            <thead>\\n                <tr>\\n\\n                    <th  style=\\\"min-width: 20px;\\\"> Name </th>\\n                    <th  style=\\\"min-width: 20px;\\\"> Author </th>\\n                     <th  style=\\\"min-width: 20px;\\\"> No Of Questions </th>\\n                     <th style=\\\"min-width: 20px;\\\"> Delete Quiz </th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr *ngFor='let quiz of quizes '>\\n\\n                    <td> <a [routerLink]=\\\"['/viewquiz',quiz.id]\\\">  {{ quiz.name }}  </a>  </td>\\n                    <td> {{ quiz.author }}</td>\\n                    <td> {{ quiz.questions.length }}</td>\\n\\n                    <td ><a (click)=\\\"deletequiz(quiz.id)\\\" class=\\\"btn btn-xs btn-danger\\\">Delete</a></td>\\n                </tr>\\n            </tbody>\\n        </table>\\n        <a routerLink=\\\"/author\\\" class=\\\"btn btn-xs btn-primary\\\" > Add Quiz </a>\\n\\n\\n    </div>\\n</div>\\n<div style=\\\"text-align:center; padding:20px; background: #ccc\\\" *ngIf=\\\"!authService.loggedIn()\\\">\\n  <br>\\n  <h1>You are not authorised! Please login first.</h1>\\n  <br>\\n  <a style=\\\"color:blue;\\\" routerLink=\\\"/authorlogin\\\" class=\\\"btn btn-default\\\"><h2>Login Here</h2></a>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/author/author.component.html\n// module id = 345\n// module chunks = 1","module.exports = \"<body style=\\\"background: #eee; height:700px;\\\">\\r\\n<h2 class=\\\"page-header\\\" style=\\\" padding:20px;   background: #888;\\\">Author Login</h2>\\r\\n<br>\\r\\n<!-- Custom Success/Error Message -->\\r\\n<div class=\\\"row show-hide-message\\\">\\r\\n  <div [ngClass]=\\\"messageClass\\\">\\r\\n    {{ message }}\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Login Form -->\\r\\n<form [formGroup]=\\\"form\\\" style=\\\"background: #888; width: 500px; padding-left:10px\\\" (submit)=\\\"onLoginSubmit()\\\">\\r\\n\\r\\n  <!-- Username Field -->\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label style=\\\"font-size:20px\\\" for=\\\"username\\\">Username</label>\\r\\n    <div [ngClass]=\\\"{'has-error': form.controls.username.errors && form.controls.username.dirty, 'has-success': form.controls.username.valid && form.controls.username.dirty }\\\">\\r\\n      <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"username\\\" formControlName=\\\"username\\\" />\\r\\n      <!-- Validation -->\\r\\n      <ul style=\\\"color:purple;\\\" class=\\\"help-block\\\">\\r\\n        <li *ngIf=\\\"form.controls.username.errors?.required && form.controls.username.dirty\\\">This field is required.</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Password Field  -->\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label style=\\\"font-size:20px\\\" for=\\\"password\\\">Password</label>\\r\\n    <div [ngClass]=\\\"{'has-error': form.controls.password.errors && form.controls.password.dirty, 'has-success': form.controls.password.valid && form.controls.password.dirty }\\\">\\r\\n      <input class=\\\"form-control\\\" type=\\\"password\\\" name=\\\"password\\\" formControlName=\\\"password\\\" />\\r\\n      <!-- Validation -->\\r\\n      <ul style=\\\"color:purple;\\\" class=\\\"help-block\\\">\\r\\n        <li *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\">This field is required.</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- Submit Button -->\\r\\n  <input [disabled]=\\\"!form.valid || processing\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"Login\\\" />\\r\\n</form>\\r\\n</body>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/authorlogin/authorlogin.html\n// module id = 346\n// module chunks = 1","module.exports = \"<a style=\\\"float:right; margin-right:20px\\\" *ngIf=\\\"authService.loggedIn()\\\" href=\\\"#\\\" (click)=\\\"onLogoutClick()\\\">Logout</a>\\n\\n<div class=\\\"jumbotron text-center\\\">\\n\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-9\\\">\\n  <h1 style=\\\"text-align:center; float: right; margin-right: 150px;\\\">QUIZ APPLICATION</h1>\\n</div>\\n<div class=\\\"col-xs-6\\\">\\n</div>\\n\\n</div>\\n  <br>\\n  <p class=\\\"lead\\\">Welcome to the MEAN Stack Quiz Application by <strong>MEAN HUNTERS</strong></p>\\n  <br>\\n\\n  <h3 *ngIf=\\\"authService.loggedIn()\\\"> Welcome {{username}}</h3>\\n\\n  <div>\\n    <a *ngIf=\\\"!authService.loggedIn()\\\" routerLink=\\\"/register\\\" class=\\\"btn btn-primary\\\">Register</a>\\n    <a *ngIf=\\\"!authService.loggedIn()\\\" routerLink=\\\"/login\\\" class=\\\"btn btn-default\\\">Login</a>\\n   <!-- <a *ngIf=\\\"!authService.loggedIn()\\\" routerLink=\\\"/loginAdmin\\\" class=\\\"btn btn-default\\\">Author Registration</a> -->\\n  <a  *ngIf=\\\"!authService.loggedIn()\\\" routerLink=\\\"/authorlogin\\\" class=\\\"btn btn-default\\\">Author Login</a>\\n<!--<a  *ngIf=\\\"!authService.loggedIn()\\\" routerLink=\\\"/authorreg\\\" class=\\\"btn btn-default\\\">Author Reg</a>-->\\n<a *ngIf=\\\"authService.loggedIn()\\\" routerLink=\\\"/quiz\\\"><h2>Take Quiz</h2></a>\\n\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-6 col-md-4\\\">\\n    <div class=\\\"thumbnail\\\">\\n      <img src=\\\"https://broadwayinfosys.com/uploads/courses/mongodb.png\\\" alt=\\\"placeholder image\\\" width=\\\"140\\\" height=\\\"140\\\">\\n      <div class=\\\"caption\\\">\\n        <h3>MongoDB</h3>\\n        <p>MongoDB is a free and open-source cross-platform document-oriented database program. This NoSQL database program uses JSON-like documents with schemas.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col-sm-6 col-md-4\\\">\\n    <div class=thumbnail> <img src=\\\"https://rishabh.io/recipes/img/004-express-js.png\\\" alt=\\\"Generic placeholder image\\\" width=\\\"250\\\" height=\\\"140\\\">\\n      <div class=caption>\\n        <h3>Express</h3>\\n        <p>Express.js is a Node.js framework. Node.js is a platform that allows JavaScript to be used outside the Web Browsers, for creating web and network applications.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col-sm-6 col-md-4\\\">\\n    <div class=thumbnail> <img src=\\\"https://blog.sagipl.com/wp-content/uploads/2017/03/angularjs-logo-300x162.jpg\\\" alt=\\\"Generic placeholder image\\\" width=\\\"250\\\" height=\\\"140\\\">\\n      <div class=caption>\\n        <h3>Angular</h3>\\n        <p>Angular is a development platform for building mobile and desktop web applications. It is a JavaScript framework which extends HTML attributes with Directives, and binds data to HTML with Expressions.</p>\\n      </div>\\n    </div>\\n  </div>\\n<div class=\\\"row\\\" style=\\\"margin-left:320px\\\">\\n  <div class=\\\"col-sm-6 col-md-4\\\">\\n    <div class=thumbnail> <img src=\\\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d9/Node.js_logo.svg/1200px-Node.js_logo.svg.png\\\" alt=\\\"Generic placeholder image\\\" width=\\\"200\\\" height=\\\"140\\\">\\n      <div class=caption>\\n        <h3>Node</h3>\\n        <p>Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col-sm-6 col-md-4\\\">\\n    <div class=thumbnail> <img src=\\\"https://cdn-images-1.medium.com/max/1600/1*yk5D5cQB3jd7EiPzrDrD5w.png\\\" alt=\\\"Generic placeholder image\\\" width=\\\"250\\\" height=\\\"140\\\">\\n      <div class=caption>\\n        <h3>React</h3>\\n        <p>React is a JavaScript library for building user interfaces. It is maintained by Facebook, Instagram and a community of individual developers and corporations.</p>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.html\n// module id = 347\n// module chunks = 1","module.exports = \"<body>\\n<h2 style=\\\" padding:20px;   background: #888;\\\" class=\\\"page-header\\\">Login</h2>\\n<br>\\n\\n<!-- Custom Success/Error Message -->\\n<div class=\\\"row show-hide-message\\\">\\n  <div [ngClass]=\\\"messageClass\\\">\\n    {{ message }}\\n  </div>\\n</div>\\n\\n<!-- Login Form -->\\n<form [formGroup]=\\\"form\\\" style=\\\"width: 500px; padding-left:10px\\\" (submit)=\\\"onLoginSubmit()\\\">\\n\\n  <!-- Username Field -->\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"username\\\">Username</label>\\n    <div [ngClass]=\\\"{'has-error': form.controls.username.errors && form.controls.username.dirty, 'has-success': form.controls.username.valid && form.controls.username.dirty }\\\">\\n      <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"username\\\" formControlName=\\\"username\\\" />\\n      <!-- Validation -->\\n      <ul class=\\\"help-block\\\">\\n        <li *ngIf=\\\"form.controls.username.errors?.required && form.controls.username.dirty\\\">This field is required.</li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n  <!-- Password Field  -->\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"password\\\">Password</label>\\n    <div [ngClass]=\\\"{'has-error': form.controls.password.errors && form.controls.password.dirty, 'has-success': form.controls.password.valid && form.controls.password.dirty }\\\">\\n      <input class=\\\"form-control\\\" type=\\\"password\\\" name=\\\"password\\\" formControlName=\\\"password\\\" />\\n      <!-- Validation -->\\n      <ul class=\\\"help-block\\\">\\n        <li *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\">This field is required.</li>\\n      </ul>\\n    </div>\\n  </div>\\n  <!-- Submit Button -->\\n  <input [disabled]=\\\"!form.valid || processing\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"Login\\\" />\\n</form>\\n</body>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.html\n// module id = 348\n// module chunks = 1","module.exports = \"<h1>NavBar Works</h1>\\r\\n  <div class=\\\"container\\\">\\r\\n    <h3 *ngIf=\\\"authService.loggedIn()\\\"> Welcome {{username+'!'}} You Can Take Quiz.</h3>\\r\\n      <ul>\\r\\n        <li [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"><a routerLink=\\\"/\\\">Home</a></li>\\r\\n      </ul>\\r\\n      <ul>\\r\\n        <li><a *ngIf=\\\"authService.loggedIn()\\\" routerLink=\\\"/quiz\\\">Take Quiz</a></li>\\r\\n        <li><a *ngIf=\\\"!authService.loggedIn()\\\" routerLink=\\\"/login\\\">Login</a></li>\\r\\n        <li><a *ngIf=\\\"authService.loggedIn()\\\" href=\\\"#\\\" (click)=\\\"onLogoutClick()\\\">Logout</a></li>\\r\\n        <li *ngIf=\\\"!authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"><a routerLink=\\\"/register\\\">Register</a></li>\\r\\n      </ul>\\r\\n    </div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/nav/navbar.html\n// module id = 349\n// module chunks = 1","module.exports = \"<div  *ngIf=\\\"authService.loggedIn()\\\">\\n<div class=\\\"row\\\">\\n  <a style=\\\"margin-left: 20px\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" routerLink=\\\"/\\\"><h2>Home</h2></a>\\n\\n<button style=\\\"margin-left: 1180px; margin-top: 6px;\\\"class=\\\"btn btn-success\\\"><a *ngIf=\\\"authService.loggedIn()\\\" href=\\\"#\\\" style=\\\"float: right;\\\" (click)=\\\"onLogoutClick()\\\">Logout</a></button>\\n</div>\\n<h1 id=\\\"head\\\" style=\\\"text-align: center; \\\">QUIZ APPLICATION </h1>\\n\\n\\n  <br>\\n\\n\\n  <h3 style=\\\"margin: none; text-align: center; color: purple;\\\" > Welcome {{username+'!'}} You Can Start Quiz.</h3>\\n<br>\\n<div class=\\\"quizBox\\\">\\n<div style=\\\"text-align: center;\\\" *ngFor=\\\"let quiz of quizes\\\" class=\\\"btn-group\\\" >\\n  <button  style=\\\"margin-left: 100px\\\" (click)=\\\"loadQuiz(quiz.id)\\\"> {{ quiz.name }}</button>\\n</div>\\n</div>\\n<br>\\n<br>\\n<div id=\\\"quiz\\\" >\\n  <div *ngIf=\\\"mode!=''\\\">\\n  <h1 class=\\\"text-sm-center\\\">{{quiz.name}}</h1>\\n  <hr />\\n</div>\\n<br>\\n\\n  <div *ngIf=\\\"mode!='' && quiz\\\">\\n    <div *ngFor=\\\"let question of filteredQuestions;\\\">\\n      <div class=\\\"badge badge-info\\\">Question {{pager.index + 1}} of {{pager.count}}.</div>\\n      <br>\\n      <h2>{{pager.index + 1}}. <span [innerHTML]=\\\"question.name\\\"></span></h2>\\n      <br>\\n      <div class=\\\"row text-left options\\\">\\n        <div class=\\\"col-md-6\\\" *ngFor=\\\"let option of question.options\\\">\\n          <div class=\\\"option\\\">\\n            <label class=\\\"\\\" [attr.for]=\\\"option.id\\\">\\n                <input id=\\\"{{option.id}}\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"option.selected\\\" (change)=\\\"onSelect(question, option);\\\" />\\n                {{option.name}}\\n            </label>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <hr />\\n    <br>\\n    <br>\\n    <div class=\\\"text-sm-center\\\" *ngIf=\\\"mode!==''\\\">\\n      <button class=\\\"btn btn-default\\\" *ngIf=\\\"config.allowBack\\\" (click)=\\\"goTo(0);\\\">First</button>\\n      <button class=\\\"btn btn-default\\\" *ngIf=\\\"config.allowBack\\\" (click)=\\\"goTo(pager.index - 1);\\\">Prev</button>\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"goTo(pager.index + 1);\\\">Next</button>\\n      <button class=\\\"btn btn-default\\\" *ngIf=\\\"config.allowBack\\\" (click)=\\\"goTo(pager.count - 1);\\\">Last</button>\\n      <!--<pagination *ngIf=\\\"config.showPager\\\" direction-links=\\\"false\\\" total-items=\\\"totalItems\\\" items-per-page=\\\"itemsPerPage\\\" ng-model=\\\"currentPage\\\" ng-change=\\\"pageChanged()\\\"></pagination>-->\\n    </div>\\n  </div>\\n  <br>\\n\\n  <div class=\\\"row review\\\" *ngIf=\\\"mode=='review'\\\">\\n    <div class=\\\"col-sm-4\\\" *ngFor=\\\"let question of quiz.questions; let index = index;\\\">\\n      <div (click)=\\\"goTo(index)\\\" class=\\\"{{ isAnswered(question) == 'Answered'? 'answered': 'not-answered' }}\\\">{{index + 1}}. {{ isAnswered(question) }}</div>\\n    </div>\\n  </div>\\n  <div class=\\\"result\\\" *ngIf=\\\"mode=='result'\\\">\\n    <h2>Quiz Result</h2>\\n    <div *ngFor=\\\"let question of quiz.questions; let index = index\\\">\\n      <div class=\\\"result-question\\\">\\n        <h4>{{index + 1}}. {{question.name}}</h4>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\" *ngFor=\\\"let Option of question.options\\\">\\n            <input id=\\\"{{Option.id}}\\\" type=\\\"checkbox\\\" disabled=\\\"disabled\\\" [(ngModel)]=\\\"Option.selected\\\" /> {{Option.name}}\\n          </div>\\n        </div>\\n        <div class=\\\"alert {{ isCorrect(question) == 'correct'? 'alert-success': 'alert-danger'}}\\\">Your answer is {{isCorrect(question)}}.</div>\\n      </div>\\n    </div>\\n  </div>\\n  <hr />\\n  <div *ngIf=\\\"mode!==''\\\">\\n    <button class=\\\"btn btn-default\\\" (click)=\\\"mode = 'review'\\\">Review</button>\\n    <button class=\\\"btn btn-default\\\" (click)=\\\"onSubmit();\\\">Submit Quiz</button>\\n    <button class=\\\"btn btn-default\\\" (click)=\\\"goBack()\\\">Back</button>\\n  </div>\\n    <div *ngIf=\\\"mode=='result'\\\">\\n       <button class=\\\"btn btn-primary\\\" (click)=\\\"goBack()\\\">Back</button>\\n    </div>\\n\\n</div>\\n</div>\\n<div style=\\\"text-align:center; padding:20px; background: #ccc\\\" *ngIf=\\\"!authService.loggedIn()\\\">\\n  <br>\\n  <h1>You are not authorised! Please login first.</h1>\\n  <br>\\n  <a style=\\\"color:blue;\\\" routerLink=\\\"/login\\\" class=\\\"btn btn-default\\\"><h2>Login Here</h2></a>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/quiz/quiz.component.html\n// module id = 350\n// module chunks = 1","module.exports = \"<body style=\\\"background: #08f\\\">\\n<h1 class=\\\"page-header\\\" style= \\\"padding: 20px; text-align:center;\\\">Registration Page</h1>\\n\\n<!-- Custom Success/Error Message -->\\n<div class=\\\"row show-hide-message\\\">\\n  <div [ngClass]=\\\"messageClass\\\">\\n    {{ message }}\\n  </div>\\n</div>\\n\\n<!-- Registration Form -->\\n<form [formGroup]=\\\"form\\\"  style=\\\"width: 840px; padding: 12px; \\\" (submit)=\\\"onRegisterSubmit()\\\">\\n  <!-- Firstname -->\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"firstname\\\">Firstname</label>\\n    <div>\\n      <input type=\\\"text\\\" style= \\\"font-size:10pt;\\\" name=\\\"firstname\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Firstname\\\" formControlName=\\\"firstname\\\"  />\\n      <!-- Validation -->\\n      <ul class=\\\"help-block\\\">\\n        <li *ngIf=\\\"form.controls.firstname.errors?.required && form.controls.firstname.dirty\\\">This field is required</li>\\n        <li *ngIf=\\\"form.controls.firstname.errors?.validateFirstname && form.controls.firstname.dirty\\\">Firstname must not have any special characters</li>\\n      </ul>\\n    </div>\\n  </div>\\n  <!-- Lastname -->\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"lastname\\\">Lastname</label>\\n    <div>\\n      <input type=\\\"text\\\" style= \\\"font-size:10pt;\\\" name=\\\"lastname\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Lastname\\\" formControlName=\\\"lastname\\\" />\\n      <!-- Validation -->\\n      <ul class=\\\"help-block\\\">\\n        <li *ngIf=\\\"form.controls.lastname.errors?.required && form.controls.lastname.dirty\\\">This field is required</li>\\n          <li *ngIf=\\\"form.controls.lastname.errors?.validateLastname && form.controls.lastname.dirty\\\">lastname must not have any special characters</li>\\n      </ul>\\n    </div>\\n  </div>\\n  <!-- Lastname -->\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"mobile\\\">Mobile</label>\\n    <div>\\n      <input type=\\\"text\\\" style= \\\"font-size:10pt;\\\" name=\\\"mobile\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*9999999999\\\" formControlName=\\\"mobile\\\" />\\n      <!-- Validation -->\\n      <ul class=\\\"help-block\\\">\\n\\n        <li *ngIf=\\\"form.controls.mobile.errors?.required && form.controls.mobile.dirty\\\">This field is required</li>\\n          <li *ngIf=\\\"form.controls.mobile.errors?.minlength && form.controls.mobile.dirty || form.controls.mobile.errors?.maxlength && form.controls.mobile.dirty \\\">Length should be 10</li>\\n        <li *ngIf=\\\"form.controls.mobile.errors?.validateMobile && form.controls.mobile.dirty\\\">mobile number must not have any special character or any alphabet</li>\\n      </ul>\\n    </div>\\n  </div>\\n  <!-- Username Input -->\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"username\\\">Username</label>\\n    <div [ngClass]=\\\"{'has-error': (form.controls.username.errors && form.controls.username.dirty) || (!usernameValid && form.controls.username.dirty), 'has-success': !form.controls.username.errors && usernameValid}\\\">\\n      <input type=\\\"text\\\" style= \\\"font-size:10pt;\\\" name=\\\"username\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Username\\\" formControlName=\\\"username\\\" (blur)=\\\"checkUsername()\\\"  />\\n      <!-- Validation -->\\n      <ul class=\\\"help-block\\\">\\n        <li *ngIf=\\\"form.controls.username.errors?.required && form.controls.username.dirty\\\">This field is required</li>\\n        <li *ngIf=\\\"form.controls.username.errors?.minlength && form.controls.username.dirty || form.controls.username.errors?.maxlength && form.controls.username.dirty \\\">Minimum characters: 3, Maximum characters: 15</li>\\n        <li *ngIf=\\\"form.controls.username.errors?.validateUsername && form.controls.username.dirty\\\">Username must not have any special characters</li>\\n        <li *ngIf=\\\"usernameMessage\\\">{{ usernameMessage }}</li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n  <!-- Email Input -->\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"email\\\">Email</label>\\n    <div [ngClass]=\\\"{'has-error': (form.controls.email.errors && form.controls.email.dirty) || (!emailValid && form.controls.email.dirty), 'has-success': !form.controls.email.errors && emailValid}\\\">\\n      <input type=\\\"text\\\" style= \\\"font-size:10pt;\\\" name=\\\"email\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Email\\\" formControlName=\\\"email\\\" (blur)=\\\"checkEmail()\\\" />\\n      <!-- Validation -->\\n      <ul class=\\\"help-block\\\">\\n        <li *ngIf=\\\"form.controls.email.errors?.required && form.controls.email.dirty\\\">This field is required</li>\\n        <li *ngIf=\\\"(form.controls.email.errors?.minlength && form.controls.email.dirty || form.controls.email.errors?.maxlength && form.controls.email.dirty ) && form.controls.email.dirty\\\">Minimum characters: 5, Maximum characters: 30</li>\\n        <li *ngIf=\\\"form.controls.email.errors?.validateEmail && form.controls.email.dirty\\\">This must be a valid e-mail</li>\\n        <li *ngIf=\\\"emailMessage\\\">{{ emailMessage}}</li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n  <!-- Password Input -->\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"password\\\">Password</label>\\n    <div [ngClass]=\\\"{'has-error': (form.controls.password.errors && form.controls.password.dirty), 'has-success': !form.controls.password.errors}\\\">\\n      <input type=\\\"password\\\" style= \\\"font-size:10pt;\\\" name=\\\"password\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Password\\\" formControlName=\\\"password\\\" />\\n      <!-- Validation -->\\n      <ul class=\\\"help-block\\\">\\n        <li *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\">This field is required</li>\\n        <li *ngIf=\\\"form.controls.password.errors?.minlength && form.controls.password.dirty || form.controls.password.errors?.maxlength && form.controls.password.dirty \\\">Minimum characters: 8, Maximum characters: 35</li>\\n        <li *ngIf=\\\"form.controls.password.errors?.validatePassword && form.controls.password.dirty\\\">Password must be at least 8 characters but no more than 35</li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n  <!-- Confirm Password Input -->\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"confirm\\\">Confirm Password</label>\\n    <div [ngClass]=\\\"{'has-error': (form.controls.confirm.errors && form.controls.confirm.dirty) || (form.errors?.matchingPasswords && form.controls.confirm.dirty), 'has-success': !form.controls.confirm.errors && !form.errors?.matchingPasswords}\\\">\\n      <input type=\\\"password\\\" style= \\\"font-size:10pt;\\\" name=\\\"confirm\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Confirm Password\\\" formControlName=\\\"confirm\\\" />\\n      <!-- Validation -->\\n      <ul class=\\\"help-block\\\">\\n        <li *ngIf=\\\"form.controls.confirm.errors?.required && form.controls.confirm.dirty\\\">This field is required</li>\\n        <li *ngIf=\\\"form.errors?.matchingPasswords && form.controls.confirm.dirty\\\">Password do not match</li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n  <!-- Submit Input -->\\n  <input [disabled]=\\\"!form.valid || processing || !emailValid || !usernameValid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\" />\\n\\n</form>\\n<!-- Registration Form /-->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/register/register.component.html\n// module id = 351\n// module chunks = 1","import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { tokenNotExpired } from 'angular2-jwt';\n\n@Injectable()\nexport class AuthService {\n\n  domain = \"http://localhost:8080/\"; // Development Domain - Not Needed in Production\n  authToken;\n  user;\n  options;\n\n  constructor(\n    private http: Http\n  ) { }\n\n  // Function to create headers, add token, to be used in HTTP requests\n  createAuthenticationHeaders() {\n    this.loadToken(); // Get token so it can be attached to headers\n    // Headers configuration options\n    this.options = new RequestOptions({\n      headers: new Headers({\n        'Content-Type': 'application/json', // Format set to JSON\n        'authorization': this.authToken // Attach token\n      })\n    });\n  }\n\n  // Function to get token from client local storage\n  loadToken() {\n    this.authToken = localStorage.getItem('token');; // Get token and asssign to variable to be used elsewhere\n  }\n\n  // Function to register user accounts\n  registerUser(user) {\n    return this.http.post(this.domain + 'authentication/register', user).map(res => res.json());\n  }\n\n  // Function to check if username is taken\n  checkUsername(username) {\n    return this.http.get(this.domain + 'authentication/checkUsername/' + username).map(res => res.json());\n  }\n\n  // Function to check if e-mail is taken\n  checkEmail(email) {\n    return this.http.get(this.domain + 'authentication/checkEmail/' + email).map(res => res.json());\n  }\n\n  // Function to login user\n  login(user) {\n    return this.http.post(this.domain + 'authentication/login', user).map(res => res.json());\n  }\n\n  // Function to logout\n  logout() {\n    this.authToken = null; // Set token to null\n    this.user = null; // Set user to null\n    localStorage.clear(); // Clear local storage\n  }\n\n  // Function to store user's data in client local storage\n  storeUserData(token, user) {\n    localStorage.setItem('token', token); // Set token in local storage\n    localStorage.setItem('user', JSON.stringify(user)); // Set user in local storage as string\n    this.authToken = token; // Assign token to be used elsewhere\n    this.user = user; // Set user to be used elsewhere\n  }\n\n  // Function to get user's profile data\n  getProfile() {\n    this.createAuthenticationHeaders(); // Create headers before sending to API\n    return this.http.get(this.domain + 'authentication/profile', this.options).map(res => res.json());\n  }\n\n\n  // Function to check if user is logged in\n  loggedIn() {\n    return tokenNotExpired();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/auth.service.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Rx';\nimport { Http, Headers, RequestOptions } from '@angular/http';\nimport { tokenNotExpired } from 'angular2-jwt';\n\n\nimport 'rxjs/add/operator/map';\n@Injectable()\nexport class QuizService {\n\n  constructor(private http: Http) { }\n\n  get(url: string) {\n    return this.http.get('http://localhost:8080/admin/quiz/'+url).map(res => res.json() );\n  }\n\n \n\ngetquiz(){\n   return this.http.get('http://localhost:8080/admin/quiz')\n     .map(res=> res.json());\n}\n\n  addquiz( newquiz: any) {   \n   console.log(newquiz);\n   var headers= new Headers();\n   headers.append('Content-Type', 'application/json');\n   return this.http.post('http://localhost:8080/admin/addquiz',newquiz, {headers: headers})\n   .map(res=>res.json());\n  }\n\n  deletequiz(id){\n     return this.http.delete('http://localhost:8080/admin/deletequiz/'+id)\n    .map(res=>res.json());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/quiz.service.ts"],"sourceRoot":""}